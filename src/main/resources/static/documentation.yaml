openapi: 3.0.1
info:
  title: OT275-Server "Somos m√°s"
  version: v1.0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /users/{id}:
    put:
      tags:
        - user-resource
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserResponse'
    delete:
      tags:
        - user-resource
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /categories/{id}:
    get:
      tags:
        - category-resource
      operationId: get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCategoryResponse'
    put:
      tags:
        - category-resource
      operationId: update_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCategoryResponse'
    delete:
      tags:
        - category-resource
      operationId: delete_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /activities/{id}:
    put:
      tags:
        - activity-resource
      operationId: update_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActivityRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateActivityResponse'
  /slides:
    get:
      tags:
        - slide-resource
      operationId: list
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSlideResponse'
    post:
      tags:
        - slide-resource
      operationId: add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSlideRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSlideResponse'
  /categories:
    post:
      tags:
        - category-resource
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategoryRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCategoryResponse'
    get:
      tags:
        - Categories
      summary: Returns a page of categories
      operationId: getCategories
      parameters:
        - in: query
          name: page
          allowEmptyValue: true
          description: Page index
          required: false
          schema:
            type: integer
        - in: query
          name: size
          allowEmptyValue: true
          description: Page size
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: OK
          example:
          content:
            application/json:
              example:
                page: 0
                size: 5
                totalPages: 1
                categories:
                  - id: 1
                    description: books
                    imageUrl: book.jpg
                    name: Literature
                  - id: 2
                    description: football
                    imageUrl: football.jpg
                    name: Sports
                  - id: 3
                    description: Entertainment
                    imageUrl: game.jpg
                    name: Games
                  - id: 4
                    description: Java Frameworks
                    imageUrl: frameworks.jpg
                    name: Frameworks
                  - id: 5
                    description: Clean Architecture
                    imageUrl: hexagonal.jpg
                    name: Software Architecture
        "403":
          description: Authentication has failed or not yet been provided
          content:
            application/problem+json:
              example:
                  statusCode: 403
                  message: "Access denied"
                  moreInfo: "Access Denied. Contact your administrator."
  /auth/register:
    post:
      security: [ ]
      tags:
        - auth-resource
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterUserResponse'
  /auth/login:
    post:
      security: [ ]
      tags:
        - auth-resource
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
  /organization/public:
    get:
      tags:
        - organization-resource
      operationId: get
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrganizationResponse'
    patch:
      tags:
        - organization-resource
      operationId: patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrganizationResponse'
  /slides/{id}:
    get:
      tags:
        - slide-resource
      operationId: getBy
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSlideResponse'
    delete:
      tags:
        - slide-resource
      operationId: delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /comments:
    get:
      tags:
        - comment-resource
      operationId: list_1
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCommentResponse'
  /testimonials/{id}:
    delete:
      tags:
        - testimonial-resource
      operationId: delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /news/{id}:
    delete:
      tags:
        - news-resource
      operationId: delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /members/{id}:
    delete:
      tags:
        - member-resource
      operationId: delete_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
  /comments/{id}:
    delete:
      tags:
        - comment-resource
      operationId: delete_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
components:
  schemas:
    UpdateUserRequest:
      required:
        - firstName
        - lastName
        - password
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        imageUrl:
          type: string
        password:
          maxLength: 16
          minLength: 8
          type: string
    UpdateUserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        imageUrl:
          type: string
    UpdateCategoryRequest:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        imageUrl:
          type: string
    UpdateCategoryResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          writeOnly: true
        name:
          type: string
          writeOnly: true
        description:
          type: string
          writeOnly: true
        imageUrl:
          type: string
          writeOnly: true
    UpdateActivityRequest:
      required:
        - content
        - imageUrl
        - name
      type: object
      properties:
        content:
          type: string
        imageUrl:
          type: string
        name:
          type: string
    UpdateActivityResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        content:
          type: string
        imageUrl:
          type: string
        name:
          type: string
    CreateSlideRequest:
      required:
        - base64FileEncoded
      type: object
      properties:
        text:
          type: string
        order:
          type: integer
          format: int32
        base64FileEncoded:
          type: string
        contentType:
          type: string
    GetSlideResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        imageUrl:
          type: string
        text:
          type: string
        position:
          type: integer
          format: int32
    CreateCategoryRequest:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        image:
          type: string
    CreateCategoryResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        image:
          type: string
    RegisterUserRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          maxLength: 16
          minLength: 8
          type: string
    RegisterUserResponse:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        token:
          type: string
    AuthenticationRequest:
      type: object
      properties:
        email:
          type: string
        password:
          maxLength: 16
          minLength: 8
          type: string
    AuthenticationResponse:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        imageUrl:
          type: string
        token:
          type: string
    SocialMediaRequest:
      type: object
      properties:
        facebookUrl:
          type: string
        linkedInUrl:
          type: string
        instagramUrl:
          type: string
    UpdateOrganizationRequest:
      type: object
      properties:
        name:
          type: string
        imageUrl:
          type: string
        address:
          type: string
        phone:
          type: string
        email:
          type: string
        socialMedia:
          $ref: '#/components/schemas/SocialMediaRequest'
        aboutUsText:
          type: string
        welcomeText:
          type: string
    SocialMediaResponse:
      type: object
      properties:
        facebookUrl:
          type: string
        linkedInUrl:
          type: string
        instagramUrl:
          type: string
    UpdateOrganizationResponse:
      type: object
      properties:
        name:
          type: string
        imageUrl:
          type: string
        address:
          type: string
        phone:
          type: string
        email:
          type: string
        socialMedia:
          $ref: '#/components/schemas/SocialMediaResponse'
        aboutUsText:
          type: string
        welcomeText:
          type: string
    ListSlideResponse:
      type: object
      properties:
        slides:
          type: array
          items:
            $ref: '#/components/schemas/SlideResponse'
    SlideResponse:
      type: object
      properties:
        imageUrl:
          type: string
        order:
          type: integer
          format: int32
    GetOrganizationResponse:
      type: object
      properties:
        name:
          type: string
        image:
          type: string
        phone:
          type: string
        address:
          type: string
        slides:
          type: array
          items:
            $ref: '#/components/schemas/SlideWithTextResponse'
    SlideWithTextResponse:
      type: object
      properties:
        imageUrl:
          type: string
        order:
          type: integer
          format: int32
        text:
          type: string
    CommentResponse:
      type: object
      properties:
        body:
          type: string
    ListCommentResponse:
      type: object
      properties:
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CommentResponse'
    GetCategoryResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        imageUrl:
          type: string
        name:
          type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - BearerAuth: [ ]